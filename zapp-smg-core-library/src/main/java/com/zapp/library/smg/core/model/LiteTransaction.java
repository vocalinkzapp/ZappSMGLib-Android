package com.zapp.library.smg.core.model;

import com.zapp.library.smg.core.util.ValidationUtils;

/**
 * Lite payment response model class.
 * @author msagi
 */
public abstract class LiteTransaction implements IValidatable {

    /**
     * This is a unique id for the payment request generated by Zapp, mainly to be used by machine as it is a 37 characters long string.
     * Note: this is the data that needs to be passed to the CFI App in the mobile device as part of the Zapp URL.
     */
    private String aptId;

    /**
     * This is a unique id for the payment request generated by Zapp, mainly to be used by human as t is an 18 characters long string, this ID is used to
     * retrieve payment status. A polling mechanism every 3-5 seconds is recommended.
     */
    private String aptrId;

    /**
     * This data is in seconds. It is for the merchant for information purposes only. It is used by Zapp to mark a payment request as 'late retrieved' after
     * this interval.
     */
    private Integer retrievalExpiryInterval;

    /**
     * This data is in seconds. It is for the merchant to poll for payment notification until this interval runs out and initiate an payment request enquiry
     * after this.
     */
    private Integer confirmationExpiryInterval;

    /**
     * This is a unique id generated by Zapp for all payment requests. It should be used to enquire a payment status for the request which has been reached its
     * confirmation expiry interval timeout.
     */
    private String settlementRetrievalId;

    public String getAptId() {
        return aptId;
    }

    public void setAptId(final String aptId) {
        this.aptId = aptId;
    }

    public String getAptrId() {
        return aptrId;
    }

    public void setAptrId(final String aptrId) {
        this.aptrId = aptrId;
    }

    public Integer getRetrievalExpiryInterval() {
        return retrievalExpiryInterval;
    }

    public void setRetrievalExpiryInterval(final Integer retrievalExpiryInterval) {
        this.retrievalExpiryInterval = retrievalExpiryInterval;
    }

    public Integer getConfirmationExpiryInterval() {
        return confirmationExpiryInterval;
    }

    public void setConfirmationExpiryInterval(final Integer confirmationExpiryInterval) {
        this.confirmationExpiryInterval = confirmationExpiryInterval;
    }

    public String getSettlementRetrievalId() {
        return settlementRetrievalId;
    }

    public void setSettlementRetrievalId(final String settlementRetrievalId) {
        this.settlementRetrievalId = settlementRetrievalId;
    }

    @Override
    public void validate() throws ZappModelValidationException {
        ValidationUtils.require(aptId, "aptId");
        ValidationUtils.require(aptrId, "aptrId");
        ValidationUtils.require(retrievalExpiryInterval, "retrievalExpiryInterval");
        ValidationUtils.require(confirmationExpiryInterval, "confirmationExpiryInterval");
        ValidationUtils.require(settlementRetrievalId, "settlementRetrievalId");
    }
}
